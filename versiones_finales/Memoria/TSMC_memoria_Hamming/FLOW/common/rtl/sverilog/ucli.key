synUtils::getArch
loaddl -simv /mnt/vol_synopsys2023/synopsys/verdi/U-2023.03-SP2/share/PLI/VCS/LINUXAMD64/libnovas.so LoadFSDBDumpCmd;LoadFSDBDumpCmd
config ckptfsdbcheck off;config endofsim noexit;config onfail {enable all};config followactivescope on;catch {setUcliVerdiConnected};set watch::resultTagsForVerdiBP {<ucli_break_bp_status_begin> <ucli_break_bp_status_end>};set ucliCore::support_restore_through_stask_in_verdi 1;cbug::config pretty_print auto;fsdbDumpfile {/mnt/vol_NFS_rh003/estudiantes/DANIELA_VARGAS/TFG_SEMANA12/sintesis_0511/versiones_finales/Memoria/TSMC_memoria_Hamming/FLOW/common/rtl/sverilog/inter.fsdb} ;fsdbDumpflush ; 
synEnv::hasFataled
ucliCore::getToolPID
sps_interactive
ucliCore::getToolPID
ucliCore::getToolPID
if {[catch {ucliCore::setFocus tool}]} {}
puts $ucliCore::nativeUcliMode
ucliCore::getToolTopPID
pid
synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.VARGAS_CHAVARRIA_2025.2933646 }
if { [info vars watch::vcbp_str_len_limit_of_get_value] != ""} {set watch::vcbp_str_len_limit_of_get_value 1024}
info command stateVerdiChangeCB
proc stateVerdiChangeCB args { if {$ucliGUI::state eq "terminated"} {puts "\n<VERDI_Terminated>\n";catch {setVerdiSimTerminated}}}
trace variable ucliGUI::state wu stateVerdiChangeCB
if {[catch {rename synopsys::restore verdiHack::restore} ]} {puts "0"}
proc synopsys::restore {args} { verdiHack::restore $args; puts "\n<VERDI_RESTORE>\n"}
if {[catch {rename quit verdiHack::quit} ]} {puts "0"}
proc quit {args} { if {[string length $args] == 0} { verdiHack::quit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n quit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::quit $args; } }
if {[catch {rename exit verdiHack::exit} ]} {puts "0"}
proc exit {args} { if {[string length $args] == 0} { verdiHack::exit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n exit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::exit $args; } }
proc checkpoint::beforeRecreate {} { sps_interactive }
if {[catch {ucliCore::setFocus tool}]} {}
save::getUserdefinedProcs
info procs
info commands
set ucliCore::resultTagsForVerdi [list <?special_verdi_begin?> <?special_verdi_end?>]
if {[catch {ucliCore::setFocus tool}]} {}
if {[catch {get uvm_pkg.UVM_VERSION_STRING} result] == 0} {puts $result}
senv hasTB
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpflush 
senv
synUtils::resolveSourceFilename tb_sinerrores.sv
puts $::ucliCore::cbug_active
if {[catch {ucliCore::setFocus tool}]} {}
checkpoint -list -all
stop
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpvars 1 "tb_sram_2kbit.dut"  +all +trace_process;fsdbDumpflush 
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpvars 1 "tb_sram_2kbit.dut.parity_higth"  +all +trace_process;fsdbDumpflush 
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpvars 1 "tb_sram_2kbit.dut.parity_low"  +all +trace_process;fsdbDumpflush 
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpvars 1 "tb_sram_2kbit.dut.syndrome_hight"  +all +trace_process;fsdbDumpflush 
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpvars 1 "tb_sram_2kbit.dut.syndrome_low"  +all +trace_process;fsdbDumpflush 
if {[catch {ucliCore::setFocus tool}]} {}
run
synEnv::hasFataled
ucliCore::getToolPID
save::getUserdefinedProcs
if {[catch {ucliCore::setFocus tool}]} {}
fsdbDumpflush 
senv
synUtils::resolveSourceFilename tb_sinerrores.sv
puts $::ucliCore::cbug_active
if {[catch {ucliCore::setFocus tool}]} {}
checkpoint -list -all
if {[catch {ucliCore::setFocus tool}]} {}
stop
if {[catch {ucliCore::setFocus tool}]} {}
finish; quit
