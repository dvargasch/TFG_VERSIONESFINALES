$date
	Sun May 11 22:06:56 2025
$end

$version
	Synopsys VCS version U-2023.03-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 615fb6d25fcb6ca0 $end


$scope module tb_top_module $end

$scope module dut $end
$var reg 4 ! data_1 [3:0] $end
$var reg 4 " data_2 [3:0] $end
$var reg 4 # data_3 [3:0] $end
$var reg 4 $ voted_q [3:0] $end
$var reg 1 % fault $end
$var reg 7 & d_1 [6:0] $end
$var reg 7 ' d_2 [6:0] $end
$var reg 7 ( d_3 [6:0] $end
$var reg 7 ) voted_encoded [6:0] $end

$scope module encoder_data_1 $end
$var reg 4 * data [3:0] $end
$var reg 7 + coded_data [6:0] $end
$upscope $end


$scope module encoder_data_2 $end
$var reg 4 , data [3:0] $end
$var reg 7 - coded_data [6:0] $end
$upscope $end


$scope module encoder_data_3 $end
$var reg 4 . data [3:0] $end
$var reg 7 / coded_data [6:0] $end
$upscope $end


$scope module voter_inst $end
$var reg 7 0 data_voted [6:0] $end
$var reg 7 1 coded_data_1 [6:0] $end
$var reg 7 2 coded_data_2 [6:0] $end
$var reg 7 3 coded_data_3 [6:0] $end
$upscope $end


$scope module decoder_inst $end
$var reg 7 4 coded_data_voted [6:0] $end
$var reg 4 5 decoded [3:0] $end
$var reg 1 6 error $end

$scope begin unnamed$$_0 $end
$var reg 1 7 syndrome_1 $end
$var reg 1 8 syndrome_2 $end
$var reg 1 9 syndrome_3 $end
$var reg 7 : data_to_be_decoded [6:0] $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
06
07
08
09
b1011010 1
b1011010 2
b1011010 3
b1011010 4
b1011010 &
b1011010 '
b1011010 (
b1010 !
b1010 "
b1010 #
b1011010 0
b1010 5
b1011010 :
b1011010 )
b1010 $
b1011010 +
b1010 *
b1011010 -
b1010 ,
b1011010 /
b1010 .
0%
$end
#10000
b1100 !
b1100 *
b1100 "
b1100 ,
b1000 #
b1000 .
b0111101 0
b0111101 )
b0111101 4
b0111100 +
b0111100 &
b0111100 1
b0111100 -
b0111100 '
b0111100 2
b1110000 /
b1110000 (
b1110000 3
b1100 5
b1100 $
16
1%
19
18
17
b0111100 :
#20000
b1001 !
b1001 *
b1010 "
b1010 ,
b1001 #
b1001 .
b0011001 +
b0011001 &
b0011001 1
b1011010 -
b1011010 '
b1011010 2
b0011001 /
b0011001 (
b0011001 3
b0011001 0
b0011001 )
b0011001 4
b1001 5
b1001 $
06
0%
09
08
07
b0011001 :
#30000
b0001 !
b0001 *
b0010 "
b0010 ,
b0001 #
b0001 .
b1001001 0
b1001001 )
b1001001 4
b1101001 +
b1101001 &
b1101001 1
b0101010 -
b0101010 '
b0101010 2
b1101001 /
b1101001 (
b1101001 3
b0001 5
b0001 $
16
1%
18
b1101001 :
#40000
b1101 !
b1101 *
b1110 "
b1110 ,
b1101 #
b1101 .
b1010101 +
b1010101 &
b1010101 1
b0010110 -
b0010110 '
b0010110 2
b1010101 /
b1010101 (
b1010101 3
b1010101 0
b1010101 )
b1010101 4
b1101 5
b1101 $
06
0%
08
b1010101 :
#50000
b1001 !
b1001 *
b0010 "
b0010 ,
b1001 #
b1001 .
b0010001 0
b0010001 )
b0010001 4
b0011001 +
b0011001 &
b0011001 1
b0101010 -
b0101010 '
b0101010 2
b0011001 /
b0011001 (
b0011001 3
b1001 5
b1001 $
16
1%
19
b0011001 :
#60000
b1000 !
b1000 *
b1010 "
b1010 ,
b1010 #
b1010 .
b1110000 +
b1110000 &
b1110000 1
b1011010 -
b1011010 '
b1011010 2
b1011010 /
b1011010 (
b1011010 3
b1011010 0
b1011010 )
b1011010 4
b1010 5
b1010 $
06
0%
09
b1011010 :
#70000
b0011 !
b0011 *
b0010 "
b0010 ,
b0011 #
b0011 .
b0101000 0
b0101000 )
b0101000 4
b1000011 +
b1000011 &
b1000011 1
b0101010 -
b0101010 '
b0101010 2
b1000011 /
b1000011 (
b1000011 3
b0010 5
b0010 $
16
1%
19
18
b0101010 :
#80000
b1001 !
b1001 *
b1010 "
b1010 ,
b1001 #
b1001 .
b0011001 +
b0011001 &
b0011001 1
b1011010 -
b1011010 '
b1011010 2
b0011001 /
b0011001 (
b0011001 3
b0011001 0
b0011001 )
b0011001 4
b1001 5
b1001 $
06
0%
09
08
b0011001 :
#90000
b1101 !
b1101 *
b1101 "
b1101 ,
b1011 #
b1011 .
b0010101 0
b0010101 )
b0010101 4
b1010101 +
b1010101 &
b1010101 1
b1010101 -
b1010101 '
b1010101 2
b0110011 /
b0110011 (
b0110011 3
b1101 5
b1101 $
16
1%
17
b1010101 :
#100000
b1010 !
b1010 *
b1000 "
b1000 ,
b1000 #
b1000 .
b1011010 +
b1011010 &
b1011010 1
b1110000 -
b1110000 '
b1110000 2
b1110000 /
b1110000 (
b1110000 3
b1110000 0
b1110000 )
b1110000 4
b1000 5
b1000 $
06
0%
07
b1110000 :
#110000
b1011 !
b1011 *
b0110 "
b0110 ,
b1011 #
b1011 .
b0100011 0
b0100011 )
b0100011 4
b0110011 +
b0110011 &
b0110011 1
b1100110 -
b1100110 '
b1100110 2
b0110011 /
b0110011 (
b0110011 3
b1011 5
b1011 $
16
1%
18
17
b0110011 :
#120000
b0111 !
b0111 *
b0111 "
b0111 ,
b0001111 +
b0001111 &
b0001111 1
b0001111 -
b0001111 '
b0001111 2
b0001111 0
b0001111 )
b0001111 4
b0111 5
b0111 $
06
0%
08
07
b0001111 :
#130000
b1111 !
b1111 *
b1111 "
b1111 ,
b1010 #
b1010 .
b1111011 0
b1111011 )
b1111011 4
b1111111 +
b1111111 &
b1111111 1
b1111111 -
b1111111 '
b1111111 2
b1011010 /
b1011010 (
b1011010 3
b1111 5
b1111 $
16
1%
19
17
b1111111 :
#140000
b0111 !
b0111 *
b0111 "
b0111 ,
b1011 #
b1011 .
b0001111 +
b0001111 &
b0001111 1
b0001111 -
b0001111 '
b0001111 2
b0110011 /
b0110011 (
b0110011 3
b0001111 0
b0001111 )
b0001111 4
b0111 5
b0111 $
06
0%
09
07
b0001111 :
#150000
b1111 !
b1111 *
b1111 "
b1111 ,
b1010 #
b1010 .
b1011011 0
b1011011 )
b1011011 4
b1111111 +
b1111111 &
b1111111 1
b1111111 -
b1111111 '
b1111111 2
b1011010 /
b1011010 (
b1011010 3
b1010 5
b1010 $
16
1%
19
18
17
b1011010 :
