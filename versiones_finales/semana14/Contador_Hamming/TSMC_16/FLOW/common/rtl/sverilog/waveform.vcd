$date
	Thu May 29 13:40:55 2025
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 6595e5a54ac14293 $end


$scope module tb_top $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # enable $end
$var wire 16 $ counter [15:0] $end

$scope module dut $end
$var reg 1 % clk $end
$var reg 1 & rst $end
$var reg 1 ' enable $end
$var reg 16 ( counter [15:0] $end
$var reg 12 ) parity_stored [11:0] $end
$var reg 1 * busy $end
$var wire 1 + error_detected $end
$var reg 12 , syndrome [11:0] $end
$var reg 16 - corrected_counter [15:0] $end
$var reg 12 . corrected_parity [11:0] $end
$var reg 1 / enable_last $end

$scope module counter_and_parity $end
$var wire 1 0 clk $end
$var wire 1 1 rst $end
$var wire 1 2 enable $end
$var wire 16 3 corrected_counter [15:0] $end
$var wire 12 4 corrected_parity [11:0] $end
$var reg 16 5 counter [15:0] $end
$var reg 12 6 parity_stored [11:0] $end
$var reg 1 7 busy $end
$var reg 1 8 error_detected $end
$var reg 1 9 enable_last $end
$var reg 16 : count_reg [15:0] $end
$var reg 16 ; count_neg [15:0] $end
$var reg 16 < counter_stored [15:0] $end
$var reg 1 = rst_done $end
$var integer 32 > i $end
$upscope $end


$scope module syndrome_inst $end
$var wire 1 ? clk $end
$var wire 1 @ enable $end
$var wire 12 A parity_stored [11:0] $end
$var wire 16 B counter_reg [15:0] $end
$var reg 12 C syndrome [11:0] $end
$var wire 1 D busy $end
$var reg 16 E corrected_counter [15:0] $end
$var wire 1 + error_detected $end
$var reg 12 F corrected_parity [11:0] $end
$var wire 1 G enable_last $end
$var wire 1 H rst $end
$var reg 1 I error_detected_parity $end
$var integer 32 J i $end

$scope begin unnamed$$_0 $end
$upscope $end


$scope begin unnamed$$_1 $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0*
0!
07
02
09
08
11
0'
1&
0#
0/
0+
0I
1"
0=
0D
0@
0G
1H
b0000000000000000 -
b000000000000 .
b0000000000000000 ;
b0000000000000000 :
b0000000000000000 $
b0000000000000000 3
b000000000000 4
b0000000000000000 5
b000000000000 6
b0000000000000000 B
b0000000000000000 <
b0000000000000000 (
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx >
b000000000000 )
b000000000000 ,
b0000000000000000 E
b000000000000 F
b00000000000000000000000000000100 J
b000000000000 A
b000000000000 C
00
0?
0%
$end
#5000
1!
1%
10
1?
0"
0&
0H
01
1#
1'
1@
12
#10000
0!
0%
00
0?
#15000
1!
1%
10
1?
1=
b0000000000000001 :
b0000000000000001 5
b0000000000000001 (
b0000000000000001 $
b0000000000000001 B
#20000
0!
0%
00
0?
b0000000000000001 ;
#25000
1!
1%
10
1?
19
1/
1G
b0000000000000010 :
b0000000000000010 5
b0000000000000010 (
b0000000000000010 $
b0000000000000010 B
#30000
0!
0%
00
0?
b0000000000000010 ;
#35000
1!
1%
10
1?
b0000000000000011 :
b0000000000000011 5
b0000000000000011 (
b0000000000000011 $
b0000000000000011 B
#40000
0!
0%
00
0?
b0000000000000011 ;
#45000
1!
1%
10
1?
0#
0'
0@
02
b0000000000000100 :
b0000000000000100 5
b0000000000000100 (
b0000000000000100 $
b0000000000000100 B
#50000
0!
0%
00
0?
b0000000000000100 ;
#55000
1!
1%
10
1?
b00000000000000000000000000000100 >
09
0/
0G
b0000000000000100 <
b000000000101 6
b000000000101 )
b000000000101 A
17
1*
1D
#60000
0!
0%
00
0?
#65000
1!
1%
10
1?
#70000
0!
0%
00
0?
#75000
1!
1%
10
1?
1#
1'
1@
12
#80000
0!
0%
00
0?
#85000
1!
1%
10
1?
19
1/
1G
b0000000000000101 :
07
0*
0D
b0000000000000101 5
b0000000000000101 (
b0000000000000101 $
b0000000000000101 B
#90000
0!
0%
00
0?
b0000000000000101 ;
#95000
1!
1%
10
1?
b0000000000000110 :
b0000000000000110 5
b0000000000000110 (
b0000000000000110 $
b0000000000000110 B
#100000
0!
0%
00
0?
b0000000000000110 ;
#105000
1!
1%
10
1?
b0000000000000111 :
b0000000000000111 5
b0000000000000111 (
b0000000000000111 $
b0000000000000111 B
#110000
0!
0%
00
0?
b0000000000000111 ;
#115000
1!
1%
10
1?
b0000000000001000 :
b0000000000001000 5
b0000000000001000 (
b0000000000001000 $
b0000000000001000 B
#120000
0!
0%
00
0?
b0000000000001000 ;
#125000
1!
1%
10
1?
