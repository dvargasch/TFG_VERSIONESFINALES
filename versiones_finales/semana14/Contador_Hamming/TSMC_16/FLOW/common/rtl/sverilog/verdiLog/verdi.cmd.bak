simSetSimulator "-vcssv" -exec "./resultados_sin_errores" -args " " -uvmDebug on
debImport "-i" "-simflow" "-dbdir" "./resultados_sin_errores.daidir"
srcDeselectAll -win $_nTrace1
srcTBInvokeSim
wvCreateWindow
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcSetScope "tb_top.dut.counter_and_parity" -delim "." -win $_nTrace1
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcSignalViewSelect "tb_top.dut.counter_and_parity.i"
srcSignalViewSelect "tb_top.dut.counter_and_parity.counter_stored\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy" \
           "tb_top.dut.counter_and_parity.parity_stored\[11:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy" \
           "tb_top.dut.counter_and_parity.parity_stored\[11:0\]" \
           "tb_top.dut.counter_and_parity.counter\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy" \
           "tb_top.dut.counter_and_parity.parity_stored\[11:0\]" \
           "tb_top.dut.counter_and_parity.counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_counter\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy" \
           "tb_top.dut.counter_and_parity.parity_stored\[11:0\]" \
           "tb_top.dut.counter_and_parity.counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_parity\[11:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy" \
           "tb_top.dut.counter_and_parity.parity_stored\[11:0\]" \
           "tb_top.dut.counter_and_parity.counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_parity\[11:0\]" \
           "tb_top.dut.counter_and_parity.enable"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy" \
           "tb_top.dut.counter_and_parity.parity_stored\[11:0\]" \
           "tb_top.dut.counter_and_parity.counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_parity\[11:0\]" \
           "tb_top.dut.counter_and_parity.enable" \
           "tb_top.dut.counter_and_parity.rst"
srcSignalViewSelect "tb_top.dut.counter_and_parity.i" \
           "tb_top.dut.counter_and_parity.rst_done" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.parity_bits" \
           "tb_top.dut.counter_and_parity.blocks" \
           "tb_top.dut.counter_and_parity.width" \
           "tb_top.dut.counter_and_parity.enable_last" \
           "tb_top.dut.counter_and_parity.error_detected" \
           "tb_top.dut.counter_and_parity.busy" \
           "tb_top.dut.counter_and_parity.parity_stored\[11:0\]" \
           "tb_top.dut.counter_and_parity.counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_counter\[15:0\]" \
           "tb_top.dut.counter_and_parity.corrected_parity\[11:0\]" \
           "tb_top.dut.counter_and_parity.enable" \
           "tb_top.dut.counter_and_parity.rst" \
           "tb_top.dut.counter_and_parity.clk"
wvAddSignal -win $_nWave3 "/tb_top/dut/counter_and_parity/i\[31:0\]" \
           "/tb_top/dut/counter_and_parity/rst_done" \
           "/tb_top/dut/counter_and_parity/counter_stored\[15:0\]" \
           "/tb_top/dut/counter_and_parity/count_neg\[15:0\]" \
           "/tb_top/dut/counter_and_parity/count_reg\[15:0\]" \
           "/tb_top/dut/counter_and_parity/parity_bits\[31:0\]" \
           "/tb_top/dut/counter_and_parity/blocks\[31:0\]" \
           "/tb_top/dut/counter_and_parity/width\[31:0\]" \
           "/tb_top/dut/counter_and_parity/enable_last" \
           "/tb_top/dut/counter_and_parity/error_detected" \
           "/tb_top/dut/counter_and_parity/busy" \
           "/tb_top/dut/counter_and_parity/parity_stored\[11:0\]" \
           "/tb_top/dut/counter_and_parity/counter\[15:0\]" \
           "/tb_top/dut/counter_and_parity/corrected_counter\[15:0\]" \
           "/tb_top/dut/counter_and_parity/corrected_parity\[11:0\]" \
           "/tb_top/dut/counter_and_parity/enable" \
           "/tb_top/dut/counter_and_parity/rst" \
           "/tb_top/dut/counter_and_parity/clk"
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("G1" 18)}
wvSetPosition -win $_nWave3 {("G1" 18)}
wvScrollDown -win $_nWave3 1
srcHBSelect "tb_top.dut.syndrome_inst" -win $_nTrace1
srcHBSelect "tb_top.dut.syndrome_inst" -win $_nTrace1
srcSetScope "tb_top.dut.syndrome_inst" -delim "." -win $_nTrace1
srcHBSelect "tb_top.dut.syndrome_inst" -win $_nTrace1
srcHBDrag -win $_nTrace1
wvSetPosition -win $_nWave3 {("G1" 2)}
wvSetPosition -win $_nWave3 {("G1" 1)}
wvSetPosition -win $_nWave3 {("G1" 3)}
wvSetPosition -win $_nWave3 {("G1" 4)}
wvSetPosition -win $_nWave3 {("G1" 5)}
wvSetPosition -win $_nWave3 {("G1" 6)}
wvSetPosition -win $_nWave3 {("G1" 7)}
wvSetPosition -win $_nWave3 {("G1" 8)}
wvSetPosition -win $_nWave3 {("G1" 9)}
wvSetPosition -win $_nWave3 {("G1" 10)}
wvSetPosition -win $_nWave3 {("G1" 11)}
wvSetPosition -win $_nWave3 {("G1" 12)}
wvSetPosition -win $_nWave3 {("G1" 13)}
wvSetPosition -win $_nWave3 {("G1" 14)}
wvSetPosition -win $_nWave3 {("G1" 15)}
wvSetPosition -win $_nWave3 {("G1" 16)}
wvSetPosition -win $_nWave3 {("G1" 17)}
wvSetPosition -win $_nWave3 {("G1" 18)}
wvSetPosition -win $_nWave3 {("G2" 0)}
wvSetPosition -win $_nWave3 {("G1" 18)}
wvSetPosition -win $_nWave3 {("G1" 17)}
wvSetPosition -win $_nWave3 {("G1" 16)}
wvSetPosition -win $_nWave3 {("G1" 15)}
wvSetPosition -win $_nWave3 {("G1" 14)}
wvSetPosition -win $_nWave3 {("G1" 13)}
wvSetPosition -win $_nWave3 {("G1" 14)}
wvSetPosition -win $_nWave3 {("G2" 0)}
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("G2" 0)}
wvDumpScope "tb_top.dut.syndrome_inst"
wvRenameGroup -win $_nWave3 {G2} {syndrome_inst}
wvAddSignal -win $_nWave3 "/tb_top/dut/syndrome_inst/clk" \
           "/tb_top/dut/syndrome_inst/enable" \
           "/tb_top/dut/syndrome_inst/parity_stored\[11:0\]" \
           "/tb_top/dut/syndrome_inst/counter_reg\[15:0\]" \
           "/tb_top/dut/syndrome_inst/syndrome\[11:0\]" \
           "/tb_top/dut/syndrome_inst/busy" \
           "/tb_top/dut/syndrome_inst/corrected_counter\[15:0\]" \
           "/tb_top/dut/syndrome_inst/error_detected" \
           "/tb_top/dut/syndrome_inst/corrected_parity\[11:0\]" \
           "/tb_top/dut/syndrome_inst/enable_last" \
           "/tb_top/dut/syndrome_inst/rst"
wvSetPosition -win $_nWave3 {("syndrome_inst" 0)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvScrollDown -win $_nWave3 1
srcSignalViewSelect "tb_top.dut.syndrome_inst.error_detected_parity"
srcSignalViewSelect "tb_top.dut.syndrome_inst.error_detected_parity" \
           "tb_top.dut.syndrome_inst.i"
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("G1" 17)}
wvSetPosition -win $_nWave3 {("G1" 18)}
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 6)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 8)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 9)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 10)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvSetPosition -win $_nWave3 {("G3" 0)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvAddSignal -win $_nWave3 "/tb_top/dut/syndrome_inst/error_detected_parity" \
           "/tb_top/dut/syndrome_inst/i\[31:0\]"
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 13)}
wvScrollUp -win $_nWave3 16
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcHBSelect "tb_top.dut" -win $_nTrace1
srcHBDrag -win $_nTrace1
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("G1" 1)}
wvSetPosition -win $_nWave3 {("G1" 2)}
wvSetPosition -win $_nWave3 {("G1" 3)}
wvSetPosition -win $_nWave3 {("G1" 4)}
wvSetPosition -win $_nWave3 {("G1" 5)}
wvSetPosition -win $_nWave3 {("G1" 6)}
wvSetPosition -win $_nWave3 {("G1" 7)}
wvSetPosition -win $_nWave3 {("G1" 8)}
wvSetPosition -win $_nWave3 {("G1" 9)}
wvSetPosition -win $_nWave3 {("G1" 10)}
wvSetPosition -win $_nWave3 {("G1" 11)}
wvSetPosition -win $_nWave3 {("G1" 12)}
wvSetPosition -win $_nWave3 {("G1" 13)}
wvSetPosition -win $_nWave3 {("G1" 14)}
wvSetPosition -win $_nWave3 {("G1" 15)}
wvSetPosition -win $_nWave3 {("G1" 16)}
wvSetPosition -win $_nWave3 {("G1" 17)}
wvSetPosition -win $_nWave3 {("G1" 18)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 0)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 1)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 2)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 3)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 4)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 5)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 6)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 7)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 8)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 9)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 10)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 12)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 13)}
wvSetPosition -win $_nWave3 {("G3" 0)}
wvDumpScope "tb_top.dut"
wvRenameGroup -win $_nWave3 {G3} {dut}
wvAddSignal -win $_nWave3 "/tb_top/dut/clk" "/tb_top/dut/rst" \
           "/tb_top/dut/enable" "/tb_top/dut/counter\[15:0\]"
wvSetPosition -win $_nWave3 {("dut" 0)}
wvSetPosition -win $_nWave3 {("dut" 4)}
wvSetPosition -win $_nWave3 {("dut" 4)}
srcTBRunSim
wvZoomAll -win $_nWave3
wvZoom -win $_nWave3 236393.392070 357445.080764
wvScrollUp -win $_nWave3 21
wvSelectSignal -win $_nWave3 {( "G1" 2 )} 
wvScrollDown -win $_nWave3 7
wvScrollUp -win $_nWave3 6
wvScrollUp -win $_nWave3 1
wvSelectSignal -win $_nWave3 {( "G1" 7 )} 
wvSelectSignal -win $_nWave3 {( "G1" 1 )} 
wvCut -win $_nWave3
wvSetPosition -win $_nWave3 {("G4" 0)}
wvSetPosition -win $_nWave3 {("dut" 4)}
wvScrollDown -win $_nWave3 3
wvScrollUp -win $_nWave3 3
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcHBDrag -win $_nTrace1
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("G1" 1)}
wvSetPosition -win $_nWave3 {("G1" 2)}
wvSetPosition -win $_nWave3 {("G1" 3)}
wvSetPosition -win $_nWave3 {("G1" 4)}
wvSetPosition -win $_nWave3 {("G1" 15)}
wvSetPosition -win $_nWave3 {("G1" 11)}
wvSetPosition -win $_nWave3 {("G1" 12)}
wvSetPosition -win $_nWave3 {("G1" 13)}
wvSetPosition -win $_nWave3 {("G1" 14)}
wvSetPosition -win $_nWave3 {("G1" 15)}
wvSetPosition -win $_nWave3 {("G1" 16)}
wvSetPosition -win $_nWave3 {("G1" 17)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 0)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 1)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 2)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 3)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 4)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 5)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 6)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 7)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 8)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 9)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 10)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 12)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 13)}
wvSetPosition -win $_nWave3 {("dut" 0)}
wvSetPosition -win $_nWave3 {("dut" 1)}
wvSetPosition -win $_nWave3 {("dut" 2)}
wvSetPosition -win $_nWave3 {("dut" 3)}
wvSetPosition -win $_nWave3 {("dut" 4)}
wvSetPosition -win $_nWave3 {("G4" 0)}
wvDumpScope "tb_top.dut.counter_and_parity"
wvRenameGroup -win $_nWave3 {G4} {counter_and_parity}
wvAddSignal -win $_nWave3 "/tb_top/dut/counter_and_parity/clk" \
           "/tb_top/dut/counter_and_parity/rst" \
           "/tb_top/dut/counter_and_parity/enable" \
           "/tb_top/dut/counter_and_parity/corrected_counter\[15:0\]" \
           "/tb_top/dut/counter_and_parity/corrected_parity\[11:0\]" \
           "/tb_top/dut/counter_and_parity/counter\[15:0\]" \
           "/tb_top/dut/counter_and_parity/parity_stored\[11:0\]" \
           "/tb_top/dut/counter_and_parity/busy" \
           "/tb_top/dut/counter_and_parity/error_detected" \
           "/tb_top/dut/counter_and_parity/enable_last"
wvSetPosition -win $_nWave3 {("counter_and_parity" 0)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 10)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 10)}
wvSelectSignal -win $_nWave3 {( "dut" 4 )} 
wvScrollDown -win $_nWave3 1
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcSetScope "tb_top.dut.counter_and_parity" -delim "." -win $_nTrace1
srcHBSelect "tb_top.dut.counter_and_parity" -win $_nTrace1
srcSignalViewSelect "tb_top.dut.counter_and_parity.rst_done"
srcSignalViewSelect "tb_top.dut.counter_and_parity.count_reg\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]"
srcSignalViewSelect "tb_top.dut.counter_and_parity.count_reg\[15:0\]" \
           "tb_top.dut.counter_and_parity.count_neg\[15:0\]" \
           "tb_top.dut.counter_and_parity.counter_stored\[15:0\]" \
           "tb_top.dut.counter_and_parity.rst_done"
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 13)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 12)}
wvSetPosition -win $_nWave3 {("syndrome_inst" 11)}
wvSetPosition -win $_nWave3 {("G1" 0)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 7)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 6)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 7)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 8)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 9)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 10)}
wvSetPosition -win $_nWave3 {("G5" 0)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 10)}
wvAddSignal -win $_nWave3 "/tb_top/dut/counter_and_parity/count_reg\[15:0\]" \
           "/tb_top/dut/counter_and_parity/count_neg\[15:0\]" \
           "/tb_top/dut/counter_and_parity/counter_stored\[15:0\]" \
           "/tb_top/dut/counter_and_parity/rst_done"
wvSetPosition -win $_nWave3 {("counter_and_parity" 10)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 14)}
wvScrollDown -win $_nWave3 1
wvSelectSignal -win $_nWave3 {( "counter_and_parity" 11 12 13 14 )} 
wvSelectSignal -win $_nWave3 {( "dut" 4 )} 
wvSelectSignal -win $_nWave3 {( "counter_and_parity" 14 )} 
wvSelectGroup -win $_nWave3 {G5}
wvSelectSignal -win $_nWave3 {( "counter_and_parity" 14 )} 
wvZoomAll -win $_nWave3
wvSelectGroup -win $_nWave3 {G5}
wvSelectSignal -win $_nWave3 {( "counter_and_parity" 14 )} 
wvSetPosition -win $_nWave3 {("counter_and_parity" 13)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 12)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 11)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 10)}
wvMoveSelected -win $_nWave3
wvSetPosition -win $_nWave3 {("counter_and_parity" 10)}
wvSetPosition -win $_nWave3 {("counter_and_parity" 11)}
wvScrollDown -win $_nWave3 0
debExit
