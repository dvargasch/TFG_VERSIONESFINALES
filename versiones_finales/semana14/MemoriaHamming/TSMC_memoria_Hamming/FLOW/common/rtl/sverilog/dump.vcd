$date
	Mon Jun  2 18:53:14 2025
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 6718af2410c4d7ed $end


$scope module tb_sram_2kbit $end
$var reg 1 ! clk $end
$var reg 1 " enable $end
$var reg 1 # rst $end
$var reg 1 $ we $end
$var reg 8 % addr [7:0] $end
$var reg 8 & data_in [7:0] $end
$var reg 8 ' data_out [7:0] $end

$scope module dut $end
$var reg 1 ( clk $end
$var reg 1 ) rst $end
$var reg 1 * enable $end
$var reg 1 + we $end
$var reg 8 , addr [7:0] $end
$var reg 8 - data_in [7:0] $end
$var reg 8 . data_out [7:0] $end
$var reg 3 / synd_lo [2:0] $end
$var reg 3 0 synd_hi [2:0] $end
$var reg 3 1 parity_lo [2:0] $end
$var reg 3 2 parity_hi [2:0] $end
$var reg 7 3 cw_lo [6:0] $end
$var reg 7 4 cw_hi [6:0] $end
$var reg 7 5 cw_lo_fixed [6:0] $end
$var reg 7 6 cw_hi_fixed [6:0] $end
$var reg 7 7 cw_lo_reg [6:0] $end
$var reg 7 8 cw_hi_reg [6:0] $end
$var reg 14 9 mem_out [13:0] $end
$var reg 14 : corrected_word [13:0] $end
$var reg 8 ; addr_r [7:0] $end
$var reg 1 < write_back $end

$scope module parity_low $end
$var reg 4 = data_in [3:0] $end
$var reg 3 > parity_out [2:0] $end
$upscope $end


$scope module parity_higth $end
$var reg 4 ? data_in [3:0] $end
$var reg 3 @ parity_out [2:0] $end
$upscope $end


$scope module syndrome_low $end
$var reg 7 A codeword [6:0] $end
$var reg 3 B syndrome [2:0] $end
$var reg 7 C corrected_codeword [6:0] $end
$upscope $end


$scope module syndrome_hight $end
$var reg 7 D codeword [6:0] $end
$var reg 3 E syndrome [2:0] $end
$var reg 7 F corrected_codeword [6:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0!
0*
1)
0+
0"
1#
0$
x<
b00000000 %
bxxxxxxxx ;
bxxxxxxxxxxxxxx :
b0000000 4
bxxxxxxx 6
b0000000 3
bxxxxxxx 5
b00000000 &
bxxxxxxxx '
b00000000 ,
b00000000 -
bxxxxxxxx .
bxxxxxxxxxxxxxx 9
b000 2
b000 @
b000 1
b000 >
bxxx 0
bxxx /
bxxxxxxx 7
bxxxxxxx 8
b0000 ?
b0000 =
bxxxxxxx A
bxxxxxxx C
bxxx B
bxxxxxxx D
bxxxxxxx F
bxxx E
0(
$end
#5000
1!
1(
0#
0)
#10000
0!
0(
#15000
1!
1(
b00101010 %
b00101010 ,
#20000
0!
0(
#25000
1!
1(
1"
1*
1$
1+
b00001010 %
b00001010 ,
b00101100 &
b00101100 -
b0010 ?
b1100 =
b0000010 4
b0010100 3
b011 @
b011 2
b011 >
b011 1
b0101010 4
b0111100 3
#30000
0!
0(
#35000
1!
1(
b00010100 %
b00010100 ,
b00111100 &
b00111100 -
b0011 ?
0<
b0101011 4
b100 @
b100 2
b1000011 4
#40000
0!
0(
#45000
1!
1(
b11111111 %
b11111111 ,
b11111111 &
b11111111 -
b1111 ?
b1111 =
b1010111 4
b0111111 3
b111 @
b111 2
b111 >
b111 1
b1111111 4
b1111111 3
#50000
0!
0(
#55000
1!
1(
0$
0+
b00001010 %
b00001010 ,
b01010100111100 9
b0111100 7
b0101010 8
b0101010 D
b0111100 A
b000 E
b000 0
b0101010 F
b0101010 6
b000 B
b000 /
b0111100 C
b0111100 5
#60000
0!
0(
#65000
1!
1(
0"
0*
b00001010 ;
b00101100 .
b00101100 '
#70000
0!
0(
#75000
1!
1(
#80000
0!
0(
#85000
1!
1(
#90000
0!
0(
#95000
1!
1(
#100000
0!
0(
#105000
1!
1(
#110000
0!
0(
#115000
1!
1(
#120000
0!
0(
#125000
1!
1(
1"
1*
#130000
0!
0(
#135000
1!
1(
#140000
0!
0(
#145000
1!
1(
#150000
0!
0(
#155000
1!
1(
#160000
0!
0(
#165000
1!
1(
1$
1+
b00011110 %
b00011110 ,
bxxxxxxxxxxxxxx 9
bxxxxxxx 7
bxxxxxxx 8
b10101000 &
b10101000 -
b1010 ?
b1000 =
bxxxxxxx D
bxxxxxxx A
b1111010 4
b1111000 3
b101 @
b101 2
b110 >
b110 1
bxxx E
bxxx 0
bxxxxxxx F
bxxxxxxx 6
bxxx B
bxxx /
bxxxxxxx C
bxxxxxxx 5
b1011010 4
b1110000 3
#170000
0!
0(
#175000
1!
1(
b00101000 %
b00101000 ,
b01001100 &
b01001100 -
b0100 ?
b1100 =
b1001100 4
b1110100 3
b011 >
b011 1
b0111100 3
#180000
0!
0(
#185000
1!
1(
b00110010 %
b00110010 ,
b00101111 &
b00101111 -
b0010 ?
b1111 =
b1001010 4
b0111111 3
b011 @
b011 2
b111 >
b111 1
b0101010 4
b1111111 3
#190000
0!
0(
#195000
1!
1(
0$
0+
b00010100 %
b00010100 ,
b01100110111110 9
b0111110 7
b0110011 8
b0110011 D
b0111110 A
b000 E
b000 0
b0110011 F
b0110011 6
b110 B
b110 /
b0111100 C
b0111100 5
#200000
0!
0(
#205000
1!
1(
b00101000 %
b00101000 ,
b10010000110000 9
b0110000 7
b1001000 8
b00010100 ;
b10111100 .
b10111100 '
b01100110111100 :
1<
b1001000 D
b0110000 A
b101 E
b101 0
b1001100 F
b1001100 6
b001 B
b001 /
b1110000 C
b1110000 5
#210000
0!
0(
#215000
1!
1(
b00110010 %
b00110010 ,
b01010101111111 9
b1111111 7
b0101010 8
b00101000 ;
b01001000 .
b01001000 '
b10011001110000 :
0<
b0101010 D
b1111111 A
b000 E
b000 0
b0101010 F
b0101010 6
b000 B
b000 /
b1111111 C
b1111111 5
#220000
0!
0(
#225000
1!
1(
b00011110 %
b00011110 ,
b10110101110000 9
b1110000 7
b1011010 8
b00110010 ;
b00101111 .
b00101111 '
b1011010 D
b1110000 A
b1011010 F
b1011010 6
b1110000 C
b1110000 5
#230000
0!
0(
#235000
1!
1(
b00001010 %
b00001010 ,
b01010100111100 9
b0111100 7
b0101010 8
b00011110 ;
b10101000 .
b10101000 '
b0101010 D
b0111100 A
b0101010 F
b0101010 6
b0111100 C
b0111100 5
#240000
0!
0(
#245000
1!
1(
b00001010 ;
b00101100 .
b00101100 '
#250000
0!
0(
#255000
1!
1(
#260000
0!
0(
#265000
1!
1(
#270000
0!
0(
#275000
1!
1(
#280000
0!
0(
#285000
1!
1(
#290000
0!
0(
#295000
1!
1(
